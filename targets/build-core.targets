<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(TaskDirectory)Microsoft.DotNet.SourceBuild.Tasks/bin/Debug/netstandard1.4/Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="WriteVersionsFile" />
  
  <!-- CORECLR -->
  <Target Name="_InitializeCoreClr">
    <FindInList CaseSensitive="false" List="@(Repository)" ItemSpecToFind="coreclr">
      <Output TaskParameter="ItemFound" ItemName="CoreClr" />
    </FindInList>

    <Error Condition="'%(CoreClr.ProjectDirectory)' == ''" Code="-1" HelpKeyword="coreclr-build" Text="Specify a CoreCLR git directory, either with the USE_CORECLR_AT property, or in the build-index.props. Find the help keyword in the 'source-build' git repository for more information." />

    <PropertyGroup>
      <CoreProjectName>%(CoreClr.Identity)</CoreProjectName>
      <CoreProjectDirectory>%(CoreClr.ProjectDirectory)</CoreProjectDirectory>
      <CorePackageOutputDirectory>$(CoreProjectDirectory)/bin/Product/$(TargetOS).$(Platform).$(Configuration)/.nuget/pkg/</CorePackageOutputDirectory>
      <CoreBuildCommand>$(CoreProjectDirectory)build$(ShellExtension)</CoreBuildCommand>
      <CoreArguments>$(Platform) $(Configuration) skiptests</CoreArguments>
    </PropertyGroup>
  </Target>

  <Target Name="BuildCoreClr" DependsOnTargets="_InitializeCoreClr">
    <MSBuild 
      Projects="$(MSBuildThisFileDirectory)../build.proj"
      Targets="BuildCoreRepo" 
      Properties="
       CoreProjectName=$(CoreProjectName);
       CoreProjectDirectory=$(CoreProjectDirectory);
       CorePackageOutputDirectory=$(CorePackageOutputDirectory);
       CoreBuildCommand=$(CoreBuildCommand);
       CoreArguments=$(CoreArguments)"
    />
  </Target>

  <Target Name="CleanCoreClr" DependsOnTargets="_InitializeCoreClr">
    <MSBuild 
      Projects="$(MSBuildThisFileDirectory)../build.proj"
      Targets="CleanCoreRepo" 
      Properties="
       CoreProjectName=$(CoreProjectName);
       CoreProjectDirectory=$(CoreProjectDirectory);
       CorePackageOutputDirectory=$(CorePackageOutputDirectory);
       CoreBuildCommand=$(CoreBuildCommand);
       CoreArguments=$(CoreArguments)"
      />
  </Target>
  <!-- END CORECLR -->

  <!-- COREFX -->
  <Target Name="_InitializeCoreFx">
    <FindInList CaseSensitive="false" List="@(Repository)" ItemSpecToFind="corefx">
      <Output TaskParameter="ItemFound" ItemName="CoreFx" />
    </FindInList>

    <Error Condition="'%(CoreFx.ProjectDirectory)' == ''" Code="-42" Text="Specify a CoreFX git directory, either with the USE_COREFX_AT property, or in the 'targets.metadata' file." />

    <PropertyGroup>
      <CoreProjectName>%(CoreFx.Identity)</CoreProjectName>
      <CoreProjectDirectory>%(CoreFx.ProjectDirectory)</CoreProjectDirectory>
      <CorePackageOutputDirectory>$(CoreProjectDirectory)bin/packages/$(Configuration)/</CorePackageOutputDirectory>
      <CoreBuildCommand>$(CoreProjectDirectory)build$(ShellExtension)</CoreBuildCommand>
      <CoreArguments>-$(Configuration) -buildArch=$(Platform)</CoreArguments>
    </PropertyGroup>
  </Target>

  <Target Name="BuildCoreFx" DependsOnTargets="_InitializeCoreFx">
    <MSBuild 
      Projects="$(MSBuildThisFileDirectory)../build.proj"
      Targets="BuildCoreRepo" 
      Properties="
       CoreProjectName=$(CoreProjectName);
       CoreProjectDirectory=$(CoreProjectDirectory);
       CorePackageOutputDirectory=$(CorePackageOutputDirectory);
       CoreBuildCommand=$(CoreBuildCommand);
       CoreArguments=$(CoreArguments)"
       
      />
  </Target>

  <Target Name="CleanCoreFx" DependsOnTargets="_InitializeCoreFx">
    <MSBuild 
      Projects="$(MSBuildThisFileDirectory)../build.proj"
      Targets="CleanCoreRepo" 
      Properties="
       CoreProjectName=$(CoreProjectName);
       CoreProjectDirectory=$(CoreProjectDirectory);
       CorePackageOutputDirectory=$(CorePackageOutputDirectory);
       CoreBuildCommand=$(CoreBuildCommand);
       CoreArguments=$(CoreArguments)"
      />
  </Target>
  <!-- END COREFX -->

  <!-- CORE REPO -->
  <!-- Should be applicable to ALL 'core repositories' -->
  <Target Name="BuildCoreRepo">
    <Message Importance="High" Text="BUILDING '$(CoreProjectName)' CORE PACKAGES." />

    <Exec Command="$(CoreBuildCommand) $(CoreArguments)"
          WorkingDirectory="$(CoreProjectDirectory)" />

    <ItemGroup>
      <CorePackages Include="$(CorePackageOutputDirectory)*.nupkg" />
    </ItemGroup>

    <Message Importance="High" Text="BUILT CORE PACKAGES: @(CorePackages)" />
    <Message Importance="High" Text="STAGING CORE PACKAGES IN : $(SourceBuiltPackagesPath)" />
    
    <Copy SourceFiles="@(CorePackages)"
          DestinationFolder="$(SourceBuiltPackagesPath)" />
    
    <WriteVersionsFile NugetPackages="@(CorePackages)"
                       OutputPath="$(IntermediatePath)$(CoreProjectName)Versions.txt" />
    <Message Importance="High" Text="placed version file in  $(IntermediatePath)$(CoreProjectName)Versions.txt" />
  </Target>

  <Target Name="CleanCoreRepo">
    <Exec Command="$(CoreProjectDirectory)clean$(ShellExtension) --all"
          WorkingDirectory="$(CoreProjectDirectory)" />
  </Target>

<!-- END CORE REPO -->

</Project>
