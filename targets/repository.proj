<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="WriteVersionsFile" />
  
  <Import Project="..\dir.props" />
  
  <!--Repo specific properties -->
  <Import Project="$(RepositoryName).props" />

  <!-- NOTE: If @(Source) is empty; then we skip the target because 'it has no inputs.' -->
  <Target Name="Build" Inputs="@(Source)" Outputs="$(VersionFileLocation)">
    <Message Importance="High" Text="BUILD REPOSITORY :: $(RepositoryName)" />
    <Message Importance="High" Condition="'@(RepositoryReference -> Count())' &gt; 0" Text="Building repository references: %(RepositoryReference.Identity)" />

    <MSBuild Condition="'@(RepositoryReference -> Count())' &gt; 0" Projects="@(RepositoryReference -> 'repository.proj')" Properties="RepositoryName=%(RepositoryReference.Identity)" BuildInParallel="true" />

    <Message Importance="High" Text="Executing $(ProjectDirectory) -- $(BuildCommand)" />

    <Exec Command="$(BuildCommand)" WorkingDirectory="$(ProjectDirectory)" />
  </Target>
  
  <Target Name="Package" AfterTargets="Build" Condition="'$(BuildPackagesCommand)' != ''">
    <Exec Command="$(BuildPackagesCommand)" WorkingDirectory="$(ProjectDirectory)" />
  </Target>
  
  <Target Name="CopyPackage" 
          AfterTargets="Package" >
    <ItemGroup>
      <!-- Filter out packages for WriteVersions -->
      <_BuiltPackages Include="$(PackagesOutput)/*.nupkg" Exclude="$(PackagesOutput)/*.symbols.nupkg"/>
    </ItemGroup>
    <Copy SourceFiles="@(_BuiltPackages)" 
          DestinationFolder="$(SourceBuiltPackagesPath)" 
          Condition="'@(_BuiltPackages)'!=''" />
  </Target>
  
  <Target Name="WriteVersions" 
          AfterTargets="CopyPackage" >          
    <WriteVersionsFile NugetPackages="@(_BuiltPackages)"
                       OutputPath="$(VersionFileLocation)"
                       Condition="'@(_BuiltPackages)'!=''" />
  </Target>
  
  <Target Name="Clean" Condition="'$(CleanCommand)' != ''" >
    <Exec Command="$(CleanCommand)" WorkingDirectory="$(ProjectDirectory)" />
  </Target>
  
  <Target Name="Update" BeforeTargets="Build" Condition="'$(UpdateCommand)' != ''" >
    <Exec Command="$(UpdateCommand)" WorkingDirectory="$(ProjectDirectory)" />
  </Target>

 <Target Name="BootstrapBuildTools" BeforeTargets="Build"
         Condition="'$(SkipBootstrapBuildTools)' != 'true' and '$(_IsBootstrapping)' == 'true'"> 
   <PropertyGroup>
     <ProjectToolsDir>$(ProjectDirectory)Tools/</ProjectToolsDir>
   </PropertyGroup>
   <RemoveDir Directories="$(ProjectToolsDir)" /> 
   <MakeDir Directories="$(ProjectToolsDir)" /> 
   <ItemGroup>
     <BuildToolsFile Include="$(BootstrapBuildToolsDir)/**" />
     <BuildToolsFile Include="$(ProjectDirectory)Tools-Override/**" />
   </ItemGroup>

   <Copy SourceFiles="@(BuildToolsFile)"
         DestinationFiles="@(BuildToolsFile->'$(ProjectToolsDir)%(RecursiveDir)%(Filename)%(Extension)')" />

   <Copy SourceFiles="$(BootstrapBuildToolsDir)/BuildToolsVersion.txt" 
         DestinationFolder="$(ProjectDirectory)" /> 
  </Target> 

  <!--Repo targets -->
  <Import Project="$(RepositoryName).targets" Condition="Exists('$(RepositoryName).targets')"/>
</Project>
