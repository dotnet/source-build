<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="AddSourceToNuGetConfig" />
  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="ChangeRuntimesSection" />
  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="FixPathSeparator" />
  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="UpdateMsBuildFrameworkDependencyVersions" />
  
  <Target Name="RemoveExternalSources" AfterTargets="Build">
  <AddSourceToNuGetConfig NuGetConfigFile="$(ProjectDirectory)/NuGet.Config" 
                          SourceName="Source-Build"  
                          SourcePath="$(SourceBuiltPackagesPath)" />     
  </Target>

  <Target Name="UpdateRuntimeSection" BeforeTargets="Build">
    <ItemGroup>
      <!-- If we're bootstrapping on an unsupported distro, we won't be able to restore most of these packages,  after
           roslyn moves to buliding against the 2.0 shared framework, we should be able to remove this condition and
           update all project.json files because we will be building them in the source-build -->
      <RoslynProjectJsonFiles Condition="'$(_IsBootstrapping)' == 'true'" Include="$(ProjectDirectory)/build/**/project.json" />
      <RoslynProjectJsonFiles Condition="'$(_IsBootstrapping)' != 'true'" Include="$(ProjectDirectory)/**/project.json" />
      <NuSpecFiles Include="$(ProjectDirectory)/**/*.nuspec" />
    </ItemGroup>
    <ChangeRuntimesSection ProjectJsonFiles="@(RoslynProjectJsonFiles)"
                           ReplacementRuntimeId="$(TargetRid)"
                           Condition="'$(TargetOS)' == 'Linux'" />

    <FixPathSeparator NuSpecFiles="@(NuSpecFiles)" />

    <UpdateMsBuildFrameworkDependencyVersions Projects="$(ProjectDirectory)/build/MSBuildToolset_msbuild/MSBuildToolset.csproj" 
                                              NuGetPackages="@(SourceBuiltPackage)"  
                                              Condition="'$(_IsBootstrapping)' == 'true'" /> 
  </Target>

   <Target Name="BootstrapPackages" 
          BeforeTargets="Package"
          Condition="'$(_IsBootstrapping)' == 'true'">
    <PropertyGroup> 
      <CsiCoreSourceDirectory>$(CsiCoreBaseDirectory)CsiCore/</CsiCoreSourceDirectory> 
      <RoslynToolsetDirectory>$(ProjectDirectory)Binaries/toolset/</RoslynToolsetDirectory> 
    </PropertyGroup> 
     
    <ItemGroup> 
      <CsiCoreCopyFile Include="$(RoslynToolsetDirectory)*" /> 
      <CsiCoreCopyFile Include="$(CsiCoreSourceDirectory)*" /> 
    </ItemGroup> 

    <!-- Create a working directory where we can copy in the CsiCore and toolset binaries for producing packages --> 
    <MakeDir Directories="$(CsiCoreWorkingDirectory)" 
             Condition="'$(_IsBootstrapping)' == 'true' and !Exists('$(CsiCoreWorkingDirectory)')" /> 

    <Copy SourceFiles="@(CsiCoreCopyFile)" 
          DestinationFolder="$(CsiCoreWorkingDirectory)"  
          OverwriteReadOnlyFiles="true" 
          SkipUnchangedFiles="true"  
          Condition="'$(_IsBootstrapping)' == 'true'" />     
  </Target>
</Project>
