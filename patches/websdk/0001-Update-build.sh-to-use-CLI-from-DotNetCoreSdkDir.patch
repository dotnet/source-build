From 249ec0071e4b45c9b7f14702b4427a575fa1070a Mon Sep 17 00:00:00 2001
From: dseefeld <dseefeld@microsoft.com>
Date: Thu, 29 Mar 2018 19:53:34 +0000
Subject: [PATCH] Update build.sh to use CLI from DotNetCoreSdkDir

---
 build.sh | 40 +++++++++++++++++++++++++---------------
 1 file changed, 25 insertions(+), 15 deletions(-)

diff --git a/build.sh b/build.sh
index a0ddead..b4363a7 100755
--- a/build.sh
+++ b/build.sh
@@ -12,6 +12,10 @@ REPOROOT="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
 
 source "$REPOROOT/scripts/common/_prettyprint.sh"
 export DOTNET_VERSION=2.1.300-preview2-008248
+if [ -n "$DotNetCoreSdkDir" ]
+then
+    export DOTNET_VERSION=$( ${DotNetCoreSdkDir}/dotnet --version )
+fi
 export WebSdkRoot=$REPOROOT
 export WebSdkReferences=$WebSdkRoot/references/ 
 export WebSdkSource=$WebSdkRoot/src/ 
@@ -19,23 +23,29 @@ export WebSdkBuild=$WebSdkRoot/build/
 
 [ -z "$BuildConfiguration" ] && export BuildConfiguration=Release
 
-# Use a repo-local install directory (but not the artifacts directory because that gets cleaned a lot
-[ -z "$DOTNET_INSTALL_DIR" ] && export DOTNET_INSTALL_DIR=$REPOROOT/.dotnet
-[ -d "$DOTNET_INSTALL_DIR" ] || mkdir -p $DOTNET_INSTALL_DIR
-
 [ -z $NUGET_PACKAGES ] && export NUGET_PACKAGES="$REPOROOT/.nuget/packages"
 export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
 
-DOTNET_INSTALL_SCRIPT_URL="https://raw.githubusercontent.com/dotnet/cli/master/scripts/obtain/dotnet-install.sh"
-curl -sSL "$DOTNET_INSTALL_SCRIPT_URL" | bash /dev/stdin --verbose --version 2.1.300-preview2-008248
-
-curl --retry 10 -s -SL -f --create-dirs -o $DOTNET_INSTALL_DIR/buildtools.tar.gz https://aspnetcore.blob.core.windows.net/buildtools/netfx/4.6.1/netfx.4.6.1.tar.gz
-[ -d "$DOTNET_INSTALL_DIR/buildtools/net461" ] || mkdir -p $DOTNET_INSTALL_DIR/buildtools/net461
-tar -zxf $DOTNET_INSTALL_DIR/buildtools.tar.gz -C $DOTNET_INSTALL_DIR/buildtools/net461
-
-# Put stage 0 on the PATH (for this shell only)
-PATH="$DOTNET_INSTALL_DIR:$PATH"
-export ReferenceAssemblyRoot=$DOTNET_INSTALL_DIR/buildtools/net461
+if [ -z "${DotNetCoreSdkDir}" ]
+then
+    # Use a repo-local install directory (but not the artifacts directory because that gets cleaned a lot
+    [ -z "$DOTNET_INSTALL_DIR" ] && export DOTNET_INSTALL_DIR=$REPOROOT/.dotnet
+    [ -d "$DOTNET_INSTALL_DIR" ] || mkdir -p $DOTNET_INSTALL_DIR
+
+    DOTNET_INSTALL_SCRIPT_URL="https://raw.githubusercontent.com/dotnet/cli/master/scripts/obtain/dotnet-install.sh"
+    curl -sSL "$DOTNET_INSTALL_SCRIPT_URL" | bash /dev/stdin --verbose --version 2.1.300-preview2-008248
+
+    curl --retry 10 -s -SL -f --create-dirs -o $DOTNET_INSTALL_DIR/buildtools.tar.gz https://aspnetcore.blob.core.windows.net/buildtools/netfx/4.6.1/netfx.4.6.1.tar.gz
+    [ -d "$DOTNET_INSTALL_DIR/buildtools/net461" ] || mkdir -p $DOTNET_INSTALL_DIR/buildtools/net461
+    tar -zxf $DOTNET_INSTALL_DIR/buildtools.tar.gz -C $DOTNET_INSTALL_DIR/buildtools/net461
+
+    # Put stage 0 on the PATH (for this shell only)
+    PATH="$DOTNET_INSTALL_DIR:$PATH"
+    export ReferenceAssemblyRoot=$DOTNET_INSTALL_DIR/buildtools/net461
+else
+    DOTNET_INSTALL_DIR=$DotNetCoreSdkDir
+    PATH="$DotNetCoreSdkDir:$PATH"
+fi
 
 
 # Increases the file descriptors limit for this bash. It prevents an issue we were hitting during restore
@@ -46,4 +56,4 @@ then
     ulimit -n 1024
 fi
 
-$DOTNET_INSTALL_DIR/dotnet msbuild "$REPOROOT/build/build.proj" /t:Build /p:Configuration=$BuildConfiguration /p:NETFrameworkSupported=false $*
\ No newline at end of file
+$DOTNET_INSTALL_DIR/dotnet msbuild "$REPOROOT/build/build.proj" /t:Build /p:Configuration=$BuildConfiguration /p:NETFrameworkSupported=false $*
-- 
1.8.3.1

