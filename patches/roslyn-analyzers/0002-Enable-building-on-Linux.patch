From c0f21b44ebd511f2ba2e502d424207972b317177 Mon Sep 17 00:00:00 2001
From: Omair Majid <omajid@redhat.com>
Date: Mon, 9 Nov 2020 16:39:22 -0500
Subject: [PATCH] Enable building on Linux

This commit adds a new build.sh file (based on the Build.cmd file) to
allow building roslyn-analzysers on Linux.

This repositories likes to use $(MSBuildProjectFullPath) as the
PackageId.  This has a problem on Linux because the file path separator
(`/`) is also used the version separator when the package id is placed
in the assets.json file. This breaks the build with an error like

roslyn-analyzers/.dotnet/sdk/5.0.100-rc.2.20479.15/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(241,5): error NETSDK1060: Error reading assets file: Error loading lock file 'roslyn-analyzers/artifacts/obj/Microsoft.CodeQuality.CSharp.Analyzers/project.assets.json': 'roslyn-analyzers/src/NetAnalyzers/Core/Microsoft.CodeQuality.Analyzers/Microsoft.CodeQuality.Analyzers.csproj*/3.3.2-dev' is not a valid version string. (Parameter 'value')
[roslyn-analyzers/src/NetAnalyzers/CSharp/Microsoft.CodeQuality.Analyzers/Microsoft.CodeQuality.CSharp.Analyzers.csproj]

Fix that by just using the file name (including exetension such as
.csproj) to skip the path mess.

The build also complains about a bunch of missing
AnalyzerReleases.Shipped.md and AnalyzerReleases.Unshipped.md files for
various *.Setup projects. Fix that by explicitly opting out of release
tracking for those projects.
---
 build.sh                                         | 16 ++++++++++++++++
 eng/common/dotnet-install.sh                     |  0
 ...CodeAnalysis.AnalyzerUtilities.Package.csproj |  4 ++--
 ...crosoft.CodeAnalysis.Analyzers.Package.csproj |  4 ++--
 ...crosoft.CodeAnalysis.AnalyzerUtilities.csproj |  2 +-
 .../Core/Microsoft.CodeAnalysis.Analyzers.csproj |  5 +++--
 ...Microsoft.CodeAnalysis.Analyzers.Setup.csproj |  5 +++--
 ...rosoft.CodeAnalysis.BannedApiAnalyzers.csproj |  2 +-
 ....CodeAnalysis.BannedApiAnalyzers.Setup.csproj |  3 ++-
 ...soft.CodeAnalysis.FxCopAnalyzers.Setup.csproj |  3 ++-
 ...soft.CodeAnalysis.VersionCheckAnalyzer.csproj |  2 +-
 .../Microsoft.CodeQuality.Analyzers.Setup.csproj |  3 ++-
 .../Microsoft.NetCore.Analyzers.Setup.csproj     |  3 ++-
 ...Microsoft.NetFramework.Analyzers.Setup.csproj |  3 ++-
 .../Microsoft.CodeAnalysis.NetAnalyzers.csproj   |  2 +-
 .../Microsoft.CodeQuality.Analyzers.csproj       |  2 +-
 .../Microsoft.NetCore.Analyzers.csproj           |  2 +-
 .../Microsoft.NetFramework.Analyzers.csproj      |  2 +-
 ...rosoft.CodeAnalysis.NetAnalyzers.Setup.csproj |  3 ++-
 ...Analysis.PerformanceSensitiveAnalyzers.csproj |  2 +-
 ...is.PerformanceSensitiveAnalyzers.Setup.csproj |  3 ++-
 ...rosoft.CodeAnalysis.PublicApiAnalyzers.csproj |  2 +-
 ...eAnalysis.PublicApiAnalyzers.CodeFixes.csproj |  2 +-
 ....CodeAnalysis.PublicApiAnalyzers.Setup.csproj |  3 ++-
 .../Core/Roslyn.Diagnostics.Analyzers.csproj     |  2 +-
 .../Roslyn.Diagnostics.Analyzers.Setup.csproj    |  3 ++-
 src/Text.Analyzers/Core/Text.Analyzers.csproj    |  2 +-
 .../Setup/Text.Analyzers.Setup.csproj            |  3 ++-
 28 files changed, 58 insertions(+), 30 deletions(-)
 create mode 100755 build.sh
 mode change 100644 => 100755 eng/common/dotnet-install.sh

diff --git a/build.sh b/build.sh
new file mode 100755
index 000000000..84a7478bf
--- /dev/null
+++ b/build.sh
@@ -0,0 +1,16 @@
+#!/usr/bin/env bash
+
+source="${BASH_SOURCE[0]}"
+
+# resolve $SOURCE until the file is no longer a symlink
+while [[ -h $source ]]; do
+  scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+  source="$(readlink "$source")"
+
+  # if $source was a relative symlink, we need to resolve it relative to the path where the
+  # symlink file was located
+  [[ $source != /* ]] && source="$scriptroot/$source"
+done
+
+scriptroot="$( cd -P "$( dirname "$source" )" && pwd )"
+"$scriptroot/eng/common/build.sh" --restore --build $@
diff --git a/eng/common/dotnet-install.sh b/eng/common/dotnet-install.sh
old mode 100644
new mode 100755
diff --git a/nuget/Microsoft.CodeAnalysis.AnalyzerUtilities/Microsoft.CodeAnalysis.AnalyzerUtilities.Package.csproj b/nuget/Microsoft.CodeAnalysis.AnalyzerUtilities/Microsoft.CodeAnalysis.AnalyzerUtilities.Package.csproj
index f6ac70f77..319e04c1b 100644
--- a/nuget/Microsoft.CodeAnalysis.AnalyzerUtilities/Microsoft.CodeAnalysis.AnalyzerUtilities.Package.csproj
+++ b/nuget/Microsoft.CodeAnalysis.AnalyzerUtilities/Microsoft.CodeAnalysis.AnalyzerUtilities.Package.csproj
@@ -14,7 +14,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.AnalyzerUtilities
       Restore would conclude that there is a cyclic dependency between Microsoft.CodeAnalysis and Microsoft.CodeAnalysis.AnalyzerUtilities.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <DevelopmentDependency>false</DevelopmentDependency>
 
     <!-- Override the version prefix for this package to allow more frequent stable releases -->
@@ -31,4 +31,4 @@
   <ItemGroup>
     <ProjectReference Include="..\..\src\Microsoft.CodeAnalysis.AnalyzerUtilities\Microsoft.CodeAnalysis.AnalyzerUtilities.csproj" />
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/nuget/Microsoft.CodeAnalysis.Analyzers/Microsoft.CodeAnalysis.Analyzers.Package.csproj b/nuget/Microsoft.CodeAnalysis.Analyzers/Microsoft.CodeAnalysis.Analyzers.Package.csproj
index 5ca2d53f9..1617b9599 100644
--- a/nuget/Microsoft.CodeAnalysis.Analyzers/Microsoft.CodeAnalysis.Analyzers.Package.csproj
+++ b/nuget/Microsoft.CodeAnalysis.Analyzers/Microsoft.CodeAnalysis.Analyzers.Package.csproj
@@ -14,7 +14,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.Analyzers 
       Restore would conclude that there is a cyclic dependency between Microsoft.CodeAnalysis and Microsoft.CodeAnalysis.Analyzers.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
   </PropertyGroup>
   
   <ItemGroup>
@@ -28,4 +28,4 @@
     <ProjectReference Include="..\..\src\Microsoft.CodeAnalysis.Analyzers\CSharp\Microsoft.CodeAnalysis.CSharp.Analyzers.csproj" />
     <ProjectReference Include="..\..\src\Microsoft.CodeAnalysis.Analyzers\VisualBasic\Microsoft.CodeAnalysis.VisualBasic.Analyzers.vbproj" />
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Microsoft.CodeAnalysis.AnalyzerUtilities/Microsoft.CodeAnalysis.AnalyzerUtilities.csproj b/src/Microsoft.CodeAnalysis.AnalyzerUtilities/Microsoft.CodeAnalysis.AnalyzerUtilities.csproj
index 5bc31228b..a596765ea 100644
--- a/src/Microsoft.CodeAnalysis.AnalyzerUtilities/Microsoft.CodeAnalysis.AnalyzerUtilities.csproj
+++ b/src/Microsoft.CodeAnalysis.AnalyzerUtilities/Microsoft.CodeAnalysis.AnalyzerUtilities.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.AnalyzerUtilities,
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.CodeAnalysis.AnalyzerUtilities package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <ExcludeInternalFlowAnalyses>true</ExcludeInternalFlowAnalyses>
     <ExcludeCodeMetricsUtilities>true</ExcludeCodeMetricsUtilities>
     <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
diff --git a/src/Microsoft.CodeAnalysis.Analyzers/Core/Microsoft.CodeAnalysis.Analyzers.csproj b/src/Microsoft.CodeAnalysis.Analyzers/Core/Microsoft.CodeAnalysis.Analyzers.csproj
index eab29554e..fd3ef65f5 100644
--- a/src/Microsoft.CodeAnalysis.Analyzers/Core/Microsoft.CodeAnalysis.Analyzers.csproj
+++ b/src/Microsoft.CodeAnalysis.Analyzers/Core/Microsoft.CodeAnalysis.Analyzers.csproj
@@ -2,11 +2,12 @@
 <Project Sdk="Microsoft.NET.Sdk">
   <PropertyGroup>
     <TargetFramework>netstandard2.0</TargetFramework>
+
     <!-- 
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.Analyzers 
       Restore would conclude that there is a cyclic dependency between Microsoft.CodeAnalysis and Microsoft.CodeAnalysis.Analyzers.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
   </PropertyGroup>
   <ItemGroup>
     <InternalsVisibleTo Include="Microsoft.CodeAnalysis.CSharp.Analyzers" />
@@ -18,4 +19,4 @@
   </ItemGroup>
   <Import Project="..\..\Utilities\Compiler\Analyzer.Utilities.projitems" Label="Shared" />
   <Import Project="..\..\Utilities\Workspaces\Workspaces.Utilities.projitems" Label="Shared" />
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Microsoft.CodeAnalysis.Analyzers/Setup/Microsoft.CodeAnalysis.Analyzers.Setup.csproj b/src/Microsoft.CodeAnalysis.Analyzers/Setup/Microsoft.CodeAnalysis.Analyzers.Setup.csproj
index d4df55f3c..3be1976b5 100644
--- a/src/Microsoft.CodeAnalysis.Analyzers/Setup/Microsoft.CodeAnalysis.Analyzers.Setup.csproj
+++ b/src/Microsoft.CodeAnalysis.Analyzers/Setup/Microsoft.CodeAnalysis.Analyzers.Setup.csproj
@@ -7,7 +7,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.Analyzers 
       Restore would conclude that there is a cyclic dependency between Microsoft.CodeAnalysis and Microsoft.CodeAnalysis.Analyzers.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
   
     <GeneratePkgDefFile>false</GeneratePkgDefFile>
     <IncludeAssemblyInVSIXContainer>false</IncludeAssemblyInVSIXContainer>
@@ -15,6 +15,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   
   <ItemGroup>
@@ -37,4 +38,4 @@
       <ForceIncludeInVSIX>true</ForceIncludeInVSIX>
     </ProjectReference>
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Core/Microsoft.CodeAnalysis.BannedApiAnalyzers.csproj b/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Core/Microsoft.CodeAnalysis.BannedApiAnalyzers.csproj
index d8d799a9d..1f89c1cec 100644
--- a/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Core/Microsoft.CodeAnalysis.BannedApiAnalyzers.csproj
+++ b/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Core/Microsoft.CodeAnalysis.BannedApiAnalyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.BannedApiAnalyzer,
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.CodeAnalysis.BannedApiAnalyzer package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <MicrosoftCodeAnalysisVersion>2.9.0</MicrosoftCodeAnalysisVersion>
   </PropertyGroup>
   <ItemGroup>
diff --git a/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Setup/Microsoft.CodeAnalysis.BannedApiAnalyzers.Setup.csproj b/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Setup/Microsoft.CodeAnalysis.BannedApiAnalyzers.Setup.csproj
index 849675f30..19627e3f5 100644
--- a/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Setup/Microsoft.CodeAnalysis.BannedApiAnalyzers.Setup.csproj
+++ b/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/Setup/Microsoft.CodeAnalysis.BannedApiAnalyzers.Setup.csproj
@@ -8,6 +8,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   
   <ItemGroup>
@@ -15,4 +16,4 @@
     <ProjectReference Include="..\CSharp\Microsoft.CodeAnalysis.CSharp.BannedApiAnalyzers.csproj" />
     <ProjectReference Include="..\VisualBasic\Microsoft.CodeAnalysis.VisualBasic.BannedApiAnalyzers.vbproj" />
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Microsoft.CodeAnalysis.FxCopAnalyzers/Setup/Microsoft.CodeAnalysis.FxCopAnalyzers.Setup.csproj b/src/Microsoft.CodeAnalysis.FxCopAnalyzers/Setup/Microsoft.CodeAnalysis.FxCopAnalyzers.Setup.csproj
index 63a68f61c..62ffd98c7 100644
--- a/src/Microsoft.CodeAnalysis.FxCopAnalyzers/Setup/Microsoft.CodeAnalysis.FxCopAnalyzers.Setup.csproj
+++ b/src/Microsoft.CodeAnalysis.FxCopAnalyzers/Setup/Microsoft.CodeAnalysis.FxCopAnalyzers.Setup.csproj
@@ -9,6 +9,7 @@
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <CreateVsixContainer>true</CreateVsixContainer>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   <ItemGroup>
     <Content Include="EULA.rtf">
@@ -57,4 +58,4 @@
       <IncludeInVSIX>true</IncludeInVSIX>
     </Content>
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Microsoft.CodeAnalysis.VersionCheckAnalyzer/Microsoft.CodeAnalysis.VersionCheckAnalyzer.csproj b/src/Microsoft.CodeAnalysis.VersionCheckAnalyzer/Microsoft.CodeAnalysis.VersionCheckAnalyzer.csproj
index bbf276e8e..3ef0e2fc7 100644
--- a/src/Microsoft.CodeAnalysis.VersionCheckAnalyzer/Microsoft.CodeAnalysis.VersionCheckAnalyzer.csproj
+++ b/src/Microsoft.CodeAnalysis.VersionCheckAnalyzer/Microsoft.CodeAnalysis.VersionCheckAnalyzer.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.VersionCheckAnalyzer,
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.CodeAnalysis.VersionCheckAnalyzer package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <MicrosoftCodeAnalysisVersion>2.0.0</MicrosoftCodeAnalysisVersion>
     <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
diff --git a/src/Microsoft.CodeQuality.Analyzers/Setup/Microsoft.CodeQuality.Analyzers.Setup.csproj b/src/Microsoft.CodeQuality.Analyzers/Setup/Microsoft.CodeQuality.Analyzers.Setup.csproj
index ed43cc1ab..fc4b50b1f 100644
--- a/src/Microsoft.CodeQuality.Analyzers/Setup/Microsoft.CodeQuality.Analyzers.Setup.csproj
+++ b/src/Microsoft.CodeQuality.Analyzers/Setup/Microsoft.CodeQuality.Analyzers.Setup.csproj
@@ -8,6 +8,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   
   <ItemGroup>
@@ -30,4 +31,4 @@
       <ForceIncludeInVSIX>true</ForceIncludeInVSIX>
     </ProjectReference>
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Microsoft.NetCore.Analyzers/Setup/Microsoft.NetCore.Analyzers.Setup.csproj b/src/Microsoft.NetCore.Analyzers/Setup/Microsoft.NetCore.Analyzers.Setup.csproj
index da8c2e923..10d97189a 100644
--- a/src/Microsoft.NetCore.Analyzers/Setup/Microsoft.NetCore.Analyzers.Setup.csproj
+++ b/src/Microsoft.NetCore.Analyzers/Setup/Microsoft.NetCore.Analyzers.Setup.csproj
@@ -8,6 +8,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   
   <ItemGroup>
@@ -30,4 +31,4 @@
       <ForceIncludeInVSIX>true</ForceIncludeInVSIX>
     </ProjectReference>
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Microsoft.NetFramework.Analyzers/Setup/Microsoft.NetFramework.Analyzers.Setup.csproj b/src/Microsoft.NetFramework.Analyzers/Setup/Microsoft.NetFramework.Analyzers.Setup.csproj
index 631b0013b..c47356ce6 100644
--- a/src/Microsoft.NetFramework.Analyzers/Setup/Microsoft.NetFramework.Analyzers.Setup.csproj
+++ b/src/Microsoft.NetFramework.Analyzers/Setup/Microsoft.NetFramework.Analyzers.Setup.csproj
@@ -8,6 +8,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   
   <ItemGroup>
@@ -30,4 +31,4 @@
       <ForceIncludeInVSIX>true</ForceIncludeInVSIX>
     </ProjectReference>
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/NetAnalyzers/Core/Microsoft.CodeAnalysis.NetAnalyzers.csproj b/src/NetAnalyzers/Core/Microsoft.CodeAnalysis.NetAnalyzers.csproj
index 23e99b957..9e7941571 100644
--- a/src/NetAnalyzers/Core/Microsoft.CodeAnalysis.NetAnalyzers.csproj
+++ b/src/NetAnalyzers/Core/Microsoft.CodeAnalysis.NetAnalyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeQuality.Analyzers
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.CodeQuality.Analyzers nuget package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <RootNamespace></RootNamespace>
   </PropertyGroup>
   <ItemGroup>
diff --git a/src/NetAnalyzers/Core/Microsoft.CodeQuality.Analyzers/Microsoft.CodeQuality.Analyzers.csproj b/src/NetAnalyzers/Core/Microsoft.CodeQuality.Analyzers/Microsoft.CodeQuality.Analyzers.csproj
index 87f524976..491bb33e7 100644
--- a/src/NetAnalyzers/Core/Microsoft.CodeQuality.Analyzers/Microsoft.CodeQuality.Analyzers.csproj
+++ b/src/NetAnalyzers/Core/Microsoft.CodeQuality.Analyzers/Microsoft.CodeQuality.Analyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeQuality.Analyzers
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.CodeQuality.Analyzers nuget package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
   </PropertyGroup>
   <ItemGroup>
     <InternalsVisibleTo Include="Microsoft.CodeQuality.CSharp.Analyzers" />
diff --git a/src/NetAnalyzers/Core/Microsoft.NetCore.Analyzers/Microsoft.NetCore.Analyzers.csproj b/src/NetAnalyzers/Core/Microsoft.NetCore.Analyzers/Microsoft.NetCore.Analyzers.csproj
index 28448f1eb..b6a410171 100644
--- a/src/NetAnalyzers/Core/Microsoft.NetCore.Analyzers/Microsoft.NetCore.Analyzers.csproj
+++ b/src/NetAnalyzers/Core/Microsoft.NetCore.Analyzers/Microsoft.NetCore.Analyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.NetCore.Analyzers
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.NetCore.Analyzers nuget package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
   </PropertyGroup>
   <ItemGroup>
     <InternalsVisibleTo Include="Microsoft.NetCore.CSharp.Analyzers" />
diff --git a/src/NetAnalyzers/Core/Microsoft.NetFramework.Analyzers/Microsoft.NetFramework.Analyzers.csproj b/src/NetAnalyzers/Core/Microsoft.NetFramework.Analyzers/Microsoft.NetFramework.Analyzers.csproj
index 8d1c98780..08549f026 100644
--- a/src/NetAnalyzers/Core/Microsoft.NetFramework.Analyzers/Microsoft.NetFramework.Analyzers.csproj
+++ b/src/NetAnalyzers/Core/Microsoft.NetFramework.Analyzers/Microsoft.NetFramework.Analyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.NetFramework.Analyzers,
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.NetFramework.Analyzers nuget package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
   </PropertyGroup>
   <ItemGroup>
     <InternalsVisibleTo Include="Microsoft.NetFramework.CSharp.Analyzers" />
diff --git a/src/NetAnalyzers/Setup/Microsoft.CodeAnalysis.NetAnalyzers.Setup.csproj b/src/NetAnalyzers/Setup/Microsoft.CodeAnalysis.NetAnalyzers.Setup.csproj
index 53c50e113..ac01471a9 100644
--- a/src/NetAnalyzers/Setup/Microsoft.CodeAnalysis.NetAnalyzers.Setup.csproj
+++ b/src/NetAnalyzers/Setup/Microsoft.CodeAnalysis.NetAnalyzers.Setup.csproj
@@ -8,6 +8,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   
   <ItemGroup>
@@ -30,4 +31,4 @@
       <ForceIncludeInVSIX>true</ForceIncludeInVSIX>
     </ProjectReference>
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/PerformanceSensitiveAnalyzers/Core/Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers.csproj b/src/PerformanceSensitiveAnalyzers/Core/Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers.csproj
index 343dd6432..014999942 100644
--- a/src/PerformanceSensitiveAnalyzers/Core/Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers.csproj
+++ b/src/PerformanceSensitiveAnalyzers/Core/Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.PerformanceSensitive.Analyzers,
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.CodeAnalysis.PerformanceSensitive.Analyzers nuget package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <MicrosoftCodeAnalysisVersion>2.9.0</MicrosoftCodeAnalysisVersion>
   </PropertyGroup>
   <ItemGroup>
diff --git a/src/PerformanceSensitiveAnalyzers/Setup/Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers.Setup.csproj b/src/PerformanceSensitiveAnalyzers/Setup/Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers.Setup.csproj
index 667d4b664..c4ae34983 100644
--- a/src/PerformanceSensitiveAnalyzers/Setup/Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers.Setup.csproj
+++ b/src/PerformanceSensitiveAnalyzers/Setup/Microsoft.CodeAnalysis.PerformanceSensitiveAnalyzers.Setup.csproj
@@ -8,6 +8,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/src/PublicApiAnalyzers/Core/Analyzers/Microsoft.CodeAnalysis.PublicApiAnalyzers.csproj b/src/PublicApiAnalyzers/Core/Analyzers/Microsoft.CodeAnalysis.PublicApiAnalyzers.csproj
index 73b42c326..1b976eef8 100644
--- a/src/PublicApiAnalyzers/Core/Analyzers/Microsoft.CodeAnalysis.PublicApiAnalyzers.csproj
+++ b/src/PublicApiAnalyzers/Core/Analyzers/Microsoft.CodeAnalysis.PublicApiAnalyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Microsoft.CodeAnalysis.PublicApiAnalyzer,
       Restore would conclude that there is a cyclic dependency between us and the Microsoft.CodeAnalysis.PublicApiAnalyzer package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <MicrosoftCodeAnalysisVersion>1.2.1</MicrosoftCodeAnalysisVersion>
   </PropertyGroup>
 
diff --git a/src/PublicApiAnalyzers/Core/CodeFixes/Microsoft.CodeAnalysis.PublicApiAnalyzers.CodeFixes.csproj b/src/PublicApiAnalyzers/Core/CodeFixes/Microsoft.CodeAnalysis.PublicApiAnalyzers.CodeFixes.csproj
index c355be240..62cbf0b50 100644
--- a/src/PublicApiAnalyzers/Core/CodeFixes/Microsoft.CodeAnalysis.PublicApiAnalyzers.CodeFixes.csproj
+++ b/src/PublicApiAnalyzers/Core/CodeFixes/Microsoft.CodeAnalysis.PublicApiAnalyzers.CodeFixes.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to DotNetAnalyzers.PublicApiAnalyzer.CodeFixes,
       Restore would conclude that there is a cyclic dependency between us and the DotNetAnalyzers.PublicApiAnalyzer.CodeFixes package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <MicrosoftCodeAnalysisVersion>1.2.1</MicrosoftCodeAnalysisVersion>
     <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
diff --git a/src/PublicApiAnalyzers/Setup/Microsoft.CodeAnalysis.PublicApiAnalyzers.Setup.csproj b/src/PublicApiAnalyzers/Setup/Microsoft.CodeAnalysis.PublicApiAnalyzers.Setup.csproj
index dbeee618f..447544a21 100644
--- a/src/PublicApiAnalyzers/Setup/Microsoft.CodeAnalysis.PublicApiAnalyzers.Setup.csproj
+++ b/src/PublicApiAnalyzers/Setup/Microsoft.CodeAnalysis.PublicApiAnalyzers.Setup.csproj
@@ -8,10 +8,11 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   
   <ItemGroup>
     <ProjectReference Include="..\Core\Analyzers\Microsoft.CodeAnalysis.PublicApiAnalyzers.csproj" />
     <ProjectReference Include="..\Core\CodeFixes\Microsoft.CodeAnalysis.PublicApiAnalyzers.CodeFixes.csproj" />
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Roslyn.Diagnostics.Analyzers/Core/Roslyn.Diagnostics.Analyzers.csproj b/src/Roslyn.Diagnostics.Analyzers/Core/Roslyn.Diagnostics.Analyzers.csproj
index 11f7691f4..9298299c7 100644
--- a/src/Roslyn.Diagnostics.Analyzers/Core/Roslyn.Diagnostics.Analyzers.csproj
+++ b/src/Roslyn.Diagnostics.Analyzers/Core/Roslyn.Diagnostics.Analyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Roslyn.Diagnostics.Analyzers,
       Restore would conclude that there is a cyclic dependency between us and the Roslyn.Diagnostics.Analyzers package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
     <MicrosoftCodeAnalysisVersion>$(MicrosoftCodeAnalysisForRoslynDiagnosticsAnalyzersVersion)</MicrosoftCodeAnalysisVersion>
   </PropertyGroup>
   <ItemGroup>
diff --git a/src/Roslyn.Diagnostics.Analyzers/Setup/Roslyn.Diagnostics.Analyzers.Setup.csproj b/src/Roslyn.Diagnostics.Analyzers/Setup/Roslyn.Diagnostics.Analyzers.Setup.csproj
index 3e76c5f63..b1ba884b5 100644
--- a/src/Roslyn.Diagnostics.Analyzers/Setup/Roslyn.Diagnostics.Analyzers.Setup.csproj
+++ b/src/Roslyn.Diagnostics.Analyzers/Setup/Roslyn.Diagnostics.Analyzers.Setup.csproj
@@ -8,6 +8,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
   
   <ItemGroup>
@@ -30,4 +31,4 @@
       <ForceIncludeInVSIX>true</ForceIncludeInVSIX>
     </ProjectReference>
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/src/Text.Analyzers/Core/Text.Analyzers.csproj b/src/Text.Analyzers/Core/Text.Analyzers.csproj
index 0b75ee195..7ad8dd4bc 100644
--- a/src/Text.Analyzers/Core/Text.Analyzers.csproj
+++ b/src/Text.Analyzers/Core/Text.Analyzers.csproj
@@ -6,7 +6,7 @@
       PackageId is used by Restore. If we set it to Text.Analyzers,
       Restore would conclude that there is a cyclic dependency between us and the Text.Analyzers nuget package.
     -->
-    <PackageId>*$(MSBuildProjectFullPath)*</PackageId>
+    <PackageId>*$(MSBuildProjectFile)*</PackageId>
   </PropertyGroup>
   <ItemGroup>
     <InternalsVisibleTo Include="Text.CSharp.Analyzers" />
diff --git a/src/Text.Analyzers/Setup/Text.Analyzers.Setup.csproj b/src/Text.Analyzers/Setup/Text.Analyzers.Setup.csproj
index d9dc06062..60d4f9612 100644
--- a/src/Text.Analyzers/Setup/Text.Analyzers.Setup.csproj
+++ b/src/Text.Analyzers/Setup/Text.Analyzers.Setup.csproj
@@ -8,6 +8,7 @@
     <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
     <ImportVSSDKTargets>true</ImportVSSDKTargets>
     <PublishWindowsPdb>false</PublishWindowsPdb>
+    <ReleaseTrackingOptOut>true</ReleaseTrackingOptOut>
   </PropertyGroup>
 
   <ItemGroup>
@@ -30,4 +31,4 @@
       <ForceIncludeInVSIX>true</ForceIncludeInVSIX>
     </ProjectReference>
   </ItemGroup>
-</Project>
\ No newline at end of file
+</Project>
-- 
2.26.2

