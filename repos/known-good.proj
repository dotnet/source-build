<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))/dir.props" />
  <PropertyGroup>
    <RepoApiImplemented>false</RepoApiImplemented>
    <OrchestratedManifestBuildName>N/A</OrchestratedManifestBuildName>
    <SkipEnsurePackagesCreated>true</SkipEnsurePackagesCreated>
  </PropertyGroup>

  <!-- This project file serves a couple of purpose.
       - We conditionally include repos based on what works on different platforms/configurations.
       - We need an "empty" build after the last real repo for prebuilt detection to work - this is that file.
       - If we have a repo that is not in core-sdk's dependency tree, we can still build it by including it here.  -->

  <!-- Windows and ARM builds currently only work through core-setup -->
  <Choose>
    <When Condition="'$(OS)' == 'Windows_NT'">
      <ItemGroup>
        <RepositoryReference Include="runtime" />
      </ItemGroup>
    </When>
    <When Condition="$(Platform.Contains('arm')) AND '$(BuildArchitecture)' != 'arm64'">
      <ItemGroup>
        <RepositoryReference Include="runtime" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <!-- Toolsets -->
        <RepositoryReference Include="sourcelink" />
        <RepositoryReference Include="arcade" />

        <!-- Tier 1 -->
        <RepositoryReference Include="application-insights" />
        <RepositoryReference Include="aspnet-xdt" />
        <RepositoryReference Include="common" />
        <RepositoryReference Include="netcorecli-fsc" />
        <RepositoryReference Include="newtonsoft-json" />
        <RepositoryReference Include="newtonsoft-json901" />
        <RepositoryReference Include="xliff-tasks" />
        <RepositoryReference Include="clicommandlineparser" />
        <RepositoryReference Include="roslyn" />

        <!-- Tier 2 -->
        <RepositoryReference Include="linker" />
        <RepositoryReference Include="runtime" />
        <RepositoryReference Include="runtime-portable" Condition="'$(PortableBuild)' != 'true' and '$(TargetOS)' == 'Linux' and '$(SkipPortableRuntimeBuild)' != 'true'" />
        <!--RepositoryReference Include="msbuild" /-->
        <!--RepositoryReference Include="templating" /-->
        <!--RepositoryReference Include="nuget-client" /-->

        <!-- Tier 3 -->

        <!--RepositoryReference Include="aspnet-extensions" /-->
        <!--RepositoryReference Include="aspnetcore-tooling" /-->
        <!--RepositoryReference Include="aspnetcore" /-->
        <!--RepositoryReference Include="websdk" /-->

        <!-- Tier 4 -->

        <!--RepositoryReference Include="sdk" /-->
        <!--RepositoryReference Include="vstest" /-->
        <!--RepositoryReference Include="fsharp" /-->

        <!-- Tier 5 -->

        <!--RepositoryReference Include="cli" /-->

        <!-- Tier 6 -->

        <!--RepositoryReference Include="toolset" /-->

        <!-- Tier 7 -->

        <!--RepositoryReference Include="core-sdk" /-->

        <!-- Package source-build artifacts -->

        <!-- RepositoryReference Include="package-source-build" / -->

      </ItemGroup>
    </Otherwise>
  </Choose>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))/dir.targets" />

  <Target Name="RepoBuild">
  </Target>
</Project>
