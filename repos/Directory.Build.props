<Project>

  <PropertyGroup>
    <RepositoryName Condition="'$(RepositoryName)' == ''">$(MSBuildProjectName)</RepositoryName>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.props, $(MSBuildThisFileDirectory)..))" />

  <PropertyGroup>
    <SourceDirectory Condition="'$(SourceDirectory)' == ''">$(RepositoryName)</SourceDirectory>
    <ProjectDirectory Condition="'$(ProjectDirectory)' == ''">$(SubmoduleDirectory)$(SourceDirectory)/</ProjectDirectory>
    <MinimalConsoleLogOutput Condition="'$(MinimalConsoleLogOutput)' == ''">true</MinimalConsoleLogOutput>
    <RepoConsoleLogFile>$(LoggingDir)$(RepositoryName).log</RepoConsoleLogFile>
    <RedirectRepoOutputToLog Condition="'$(MinimalConsoleLogOutput)' == 'true'">&gt;&gt; $(RepoConsoleLogFile) 2&gt;&amp;1</RedirectRepoOutputToLog>

    <!--
      Repo specific semaphore path for incremental build
    -->
    <RepoCompletedSemaphorePath>$(CompletedSemaphorePath)$(RepositoryName)/</RepoCompletedSemaphorePath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <FlagParameterPrefix>-</FlagParameterPrefix>
    <ArcadeFalseBoolBuildArg>0</ArcadeFalseBoolBuildArg>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <FlagParameterPrefix>--</FlagParameterPrefix>
    <ArcadeFalseBoolBuildArg>false</ArcadeFalseBoolBuildArg>
  </PropertyGroup>

  <!-- A human-readable description of what's building and why. -->
  <PropertyGroup>
    <ProjectBuildReason>'$(RepositoryName)'</ProjectBuildReason>
  </PropertyGroup>

  <ItemGroup>
    <EnvironmentVariables Include="DotNetBuildFromSource=true" />
    <EnvironmentVariables Include="DotNetPackageVersionPropsPath=$(PackageVersionPropsPath)" />
    <EnvironmentVariables Include="DotNetRestorePackagesPath=$(PackagesDir)" />

    <!-- Arcade tools.sh picks up DotNetCoreSdkDir, but we can pass DOTNET_INSTALL_DIR directly. -->
    <EnvironmentVariables Include="DOTNET_INSTALL_DIR=$(DotNetCliToolDir)" />
    <EnvironmentVariables Include="DOTNET_PATH=$(DotNetCliToolDir)" />
    <EnvironmentVariables Include="DOTNET_HOST_PATH=$(DotNetCliToolDir)dotnet" />

    <!-- _InitializeDotNetCli is used by websdk and templating to decide whether to init the SDK -->
    <EnvironmentVariables Include="_InitializeDotNetCli=$(DotNetCliToolDir)" />
    <EnvironmentVariables Include="_DotNetInstallDir=$(DotNetCliToolDir)" />
    <EnvironmentVariables Include="_InitializeToolset=$(ProjectDir)Tools/source-built/Microsoft.DotNet.Arcade.Sdk/tools/Build.proj" Condition="'$(UseBootstrapArcade)' != 'true'" />

    <EnvironmentVariables Include="DotNetUseShippingVersions=true" />

    <EnvironmentVariables Include="PreReleaseVersionLabel=$(PreReleaseVersionLabel)" />
    <EnvironmentVariables Include="PackageVersionStamp=$(PreReleaseVersionLabel)" />
    <EnvironmentVariables Include="PB_VersionStamp=$(PreReleaseVersionLabel)" />

    <!-- We pass '-ci', but also apply ci mode via env var for edge cases. (E.g. misbehaving inner builds.) -->
    <EnvironmentVariables Include="ContinuousIntegrationBuild=true" />

    <!-- Turn off node reuse for source build because repos use conflicting versions
         of compilers which cause assembly load errors.
         See https://github.com/dotnet/source-build/issues/541 -->
    <EnvironmentVariables Include="MSBUILDDISABLENODEREUSE=1" />

    <!--
      Apply official build versioning to match Microsoft build. These are based on build date, so
      need to be parsed from Maestro++ auto-update and passed through.
    -->
    <EnvironmentVariables Include="OfficialBuildId=$(OfficialBuildId)" />
    <EnvironmentVariables Include="BUILD_BUILDNUMBER=$(OfficialBuildId)" />

    <!-- Give build access to commit info without necessarily requiring git queries. -->
    <EnvironmentVariables Include="GitCommitCount=$(GitCommitCount)" />
    <EnvironmentVariables Include="GitCommitHash=$(GitCommitHash)" Condition="'$(GitCommitHash)' != ''" />
    <EnvironmentVariables Include="GitInfoCommitHash=$(GitCommitHash)" Condition="'$(GitCommitHash)' != ''" />
    <EnvironmentVariables Include="SourceRevisionId=$(GitCommitHash)" Condition="'$(GitCommitHash)' != ''" />
    <EnvironmentVariables Include="RepositoryCommit=$(GitCommitHash)" Condition="'$(GitCommitHash)' != ''" />
    <EnvironmentVariables Include="COMMIT_SHA=$(GitCommitHash)" Condition="'$(GitCommitHash)' != ''" />
    <EnvironmentVariables Include="GIT_COMMIT=$(GitCommitHash)" Condition="'$(GitCommitHash)' != ''" />
    <EnvironmentVariables Include="RepositoryType=Git" />

    <EnvironmentVariables Include="DeterministicSourcePaths=true" Condition="'$(DeterministicBuildOptOut)' != 'true'" />
    <EnvironmentVariables Include="DeterministicSourcePaths=false" Condition="'$(DeterministicBuildOptOut)' == 'true'" />

    <EnvironmentVariables Include="SourceRoot=$(ProjectDirectory)" />
  </ItemGroup>

</Project>
