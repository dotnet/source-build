<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredHash>51310e65e75010467993f793e1739d1a1dad50c5</PreferredHash>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))/dir.props" />

  <PropertyGroup>
    <OfficialBuildId>20190623.1</OfficialBuildId>

    <BuildCommandArgs/>
    <BuildCommandArgs>$(BuildCommandArgs) $(FlagParameterPrefix)pack</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) $(FlagParameterPrefix)configuration $(Configuration)</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) $(FlagParameterPrefix)binaryLog</BuildCommandArgs>
    <BuildCommand>$(ProjectDirectory)build$(ShellExtension) $(BuildCommandArgs)</BuildCommand>

    <GlobalJsonFile>$(ProjectDirectory)global.json</GlobalJsonFile>
    <NuGetConfigFile>$(ProjectDirectory)NuGet.config</NuGetConfigFile>
    <LogVerbosityOptOut>true</LogVerbosityOptOut>
    <OutputPlacementRepoApiImplemented>false</OutputPlacementRepoApiImplemented>
    <PackagesOutput>$(ProjectDirectory)artifacts/packages/$(Configuration)/Shipping/</PackagesOutput>

    <!-- SourceLink builds before Arcade so it also needs the bootstrap Arcade version -->
    <UseBootstrapArcade>true</UseBootstrapArcade>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OfflineBuild)' != 'true'">
    <ArcadeBootstrapVersion>$(ARCADE_BOOTSTRAP_VERSION)</ArcadeBootstrapVersion>
    <ArcadeBootstrapDir>$(PackagesDir)</ArcadeBootstrapDir>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OfflineBuild)' == 'true'">
    <!-- stage1 Arcade is always built with a 1.0.0-dev version so this is consistent -->
    <ArcadeBootstrapVersion>1.0.0-dev</ArcadeBootstrapVersion>
    <ArcadeBootstrapDir>$(ArcadeBootstrapPackageDir)</ArcadeBootstrapDir>
  </PropertyGroup>

  <ItemGroup>
    <!-- bootstrap our version of sourcelink using the version of bootstrap Arcade that source-build retrieves.
         This prevents getting into a dependency loop of sourcelink needing Arcade to build and vice-versa.  -->
    <EnvironmentVariables Include="SOURCE_BUILT_SDK_ID_ARCADEBOOTSTRAP=Microsoft.DotNet.Arcade.Sdk" />
    <EnvironmentVariables Include="SOURCE_BUILT_SDK_VERSION_ARCADEBOOTSTRAP=$(ArcadeBootstrapVersion)" />
    <EnvironmentVariables Include="SOURCE_BUILT_SDK_DIR_ARCADEBOOTSTRAP=$(ArcadeBootstrapDir)microsoft.dotnet.arcade.sdk/$(ArcadeBootstrapVersion)" />
  </ItemGroup>

  <ItemGroup>
    <!-- reset SDK location variables to use 3.0 SDK override -->
    <EnvironmentVariables Remove="DOTNET_TOOL_DIR=$(DotNetCliToolDir)" />
    <EnvironmentVariables Remove="DotNetCoreSdkDir=$(DotNetCliToolDir)" />
    <EnvironmentVariables Remove="DotNetRoot=$(DotNetCliToolDir)" />
    <EnvironmentVariables Remove="DotNetToolPath=$(DotNetCliToolDir)" />
    <EnvironmentVariables Remove="DotNetTool=$(DotNetCliToolDir)dotnet" />
    <EnvironmentVariables Remove="DOTNET_HOST_PATH=$(DotNetCliToolDir)dotnet" />
    <EnvironmentVariables Remove="_InitializeDotNetCli=$(DotNetCliToolDir)" />

    <EnvironmentVariables Include="DOTNET_TOOL_DIR=$(DotNet3CliToolDir)" />
    <EnvironmentVariables Include="DotNetCoreSdkDir=$(DotNet3CliToolDir)" />
    <EnvironmentVariables Include="DotNetRoot=$(DotNet3CliToolDir)" />
    <EnvironmentVariables Include="DotNetToolPath=$(DotNet3CliToolDir)" />
    <EnvironmentVariables Include="DotNetTool=$(DotNet3CliToolDir)dotnet" />
    <EnvironmentVariables Include="DOTNET_HOST_PATH=$(DotNet3CliToolDir)dotnet" />
    <EnvironmentVariables Include="_InitializeDotNetCli=$(DotNet3CliToolDir)" />
  </ItemGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))/dir.targets" />
</Project>
