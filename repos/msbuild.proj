<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))/dir.props" />

  <PropertyGroup>
    <PackagesOutput>$(ProjectDirectory)/artifacts/$(Configuration)/packages</PackagesOutput>

    <OutputVersionArgs>/p:PackageVersion=16.0.0-preview.225</OutputVersionArgs>
    <!-- Set assembly version. Otherwise, defaults to 1.0.0 because we don't have nerdbank versioning. -->
    <OutputVersionArgs>$(OutputVersionArgs) /p:VersionPrefix=15.1.0</OutputVersionArgs>
    <OutputVersionArgs>$(OutputVersionArgs) /p:DisableNerdbankVersioning=true</OutputVersionArgs>

    <BuildCommandArgs>build -DotNetBuildFromSource</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) -DotNetCoreSdkDir $(DotNetCliToolDir)</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) -skiptests</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) -pack</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) -configuration $(Configuration)</BuildCommandArgs>
    <BuildCommandArgs>$(BuildCommandArgs) $(OutputVersionArgs)</BuildCommandArgs>

    <BuildCommand>$(ProjectDirectory)build/build$(ShellExtension) $(BuildCommandArgs)</BuildCommand>

    <!-- NuGet SDK resolver only checks nuget.config files. https://github.com/Microsoft/msbuild/issues/2914 -->
    <NuGetConfigFile>$(ProjectDirectory)/NuGet.Config</NuGetConfigFile>

    <SourceOverrideRepoApiImplemented>true</SourceOverrideRepoApiImplemented>
    <RepoApiImplemented>false</RepoApiImplemented>
    <!--
      MSBuild is part of ProdCon, but that branch doesn't build from source yet.
    <OrchestratedManifestBuildName>Microsoft/msbuild</OrchestratedManifestBuildName>
    -->
    <OrchestratedManifestBuildName>N/A</OrchestratedManifestBuildName>
  </PropertyGroup>

  <ItemGroup>
    <UseSourceBuiltSdkOverride Include="@(RepoToolsetSdkOverride)" />
  </ItemGroup>

  <ItemGroup>
    <RepositoryReference Include="roslyn-tools" />
    <RepositoryReference Include="roslyn" />
  </ItemGroup>

  <!--
    Begin workaround: https://github.com/dotnet/source-build/issues/933

    The CentralPackageVersions SDK isn't actually source-built. We get it as a text-only prebuilt,
    but the NuGet resolver seems flaky so we're using our resolver instead. We only have access to
    the nupkg ahead of time when building a tarball, so only enable this workaround then.
  -->
  <ItemGroup Condition="'$(OfflineBuild)' == 'true'">
    <CentralPackageVersionsSdkOverride Include="Microsoft.Build.CentralPackageVersions" Group="CENTRAL_PACKAGE_VERSIONS" />
    <UseSourceBuiltSdkOverride Include="@(CentralPackageVersionsSdkOverride)" />
  </ItemGroup>

  <Target Name="ExtractCentralPackageVersionsSdkPackage"
          BeforeTargets="SetSourceBuiltSdkOverrides"
          Condition="'$(OfflineBuild)' == 'true'">
    <ItemGroup>
      <_CentralVersionsToolPackage
        Include="$(ReferencePackagesDir)%(CentralPackageVersionsSdkOverride.Identity)*.nupkg"
        Id="%(CentralPackageVersionsSdkOverride.Identity)" />
    </ItemGroup>

    <PropertyGroup>
      <CentralVersionsSdkDir>$(ToolPackageExtractDir)%(_CentralVersionsToolPackage.Id)/</CentralVersionsSdkDir>
    </PropertyGroup>

    <Message Importance="High" Text="Setting up SDK package for UseSourceBuiltSdkOverride: %(_CentralVersionsToolPackage.Filename)" />

    <ZipFileExtractToDirectory
      SourceArchive="@(_CentralVersionsToolPackage)"
      DestinationDirectory="$(CentralVersionsSdkDir)"
      OverwriteDestination="true" />
  </Target>
  <!--
    End workaround: https://github.com/dotnet/source-build/issues/933
  -->

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))/dir.targets" />
</Project>
