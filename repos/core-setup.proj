<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))/dir.props" />
  <PropertyGroup>
    <!-- CLI uses the portable RID for OSX all the time, so override -->
    <OverridePortableBuild>$(PortableBuild)</OverridePortableBuild>
    <OverrideTargetRid>$(TargetRid)</OverrideTargetRid>
    <OverridePortableBuild Condition="'$(TargetOS)' == 'OSX'">true</OverridePortableBuild>
    <OverrideTargetRid Condition="'$(TargetOS)' == 'OSX'">osx-x64</OverrideTargetRid>

    <BuildArguments>-ConfigurationGroup=$(Configuration)</BuildArguments>
    <BuildArguments>$(BuildArguments) -PortableBuild=$(OverridePortableBuild)</BuildArguments>
    <BuildArguments>$(BuildArguments) -SkipTests=true</BuildArguments>
    <BuildArguments Condition="$(Platform.Contains('arm'))">$(BuildArguments) -TargetArchitecture=$(Platform) -DisableCrossgen=true -CrossBuild=true</BuildArguments>
    <BuildArguments>$(BuildArguments) --</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:BuildDebPackage=false</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:BuildAllPackages=true</BuildArguments>
    <BuildArguments>$(BuildArguments) /p:OutputRid=$(OverrideTargetRid)</BuildArguments>
    <BuildArguments>$(BuildArguments) /bl</BuildArguments>

    <BuildCommand>$(ProjectDirectory)/build$(ShellExtension) $(BuildArguments)</BuildCommand>
    <BuildCommand Condition="$(Platform.Contains('arm'))">$(ArmEnvironmentVariables) $(BuildCommand)</BuildCommand>

    <OfficialBuildId>20181019-06</OfficialBuildId>

    <!-- Need to set $(PackagesOutput) so WriteVersions writes the versions file for cli, until cli respects auto-dependency flow -->
    <PackagesOutput>$(SourceBuiltPackagesPath)</PackagesOutput>
  </PropertyGroup>

  <ItemGroup>
    <RepositoryReference Include="coreclr" />
    <RepositoryReference Include="corefx" />
    <RepositoryReference Include="newtonsoft-json" />
    <RepositoryReference Include="standard" />
  </ItemGroup>

  <ItemGroup>
    <EnvironmentVariables Include="OfficialBuildId=$(OfficialBuildId)" />
  </ItemGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))/dir.targets" />

  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="PublishCoreSetupBinaries" />

  <!-- Need to "publish" the tarballs for cli, until cli respects the assets blob -->
  <Target Name="PublishBinaries" AfterTargets="Package">
    <ItemGroup>
      <CoreSetupTarballs Include="$(SourceBuiltAssetsDir)dotnet-runtime-*$(TarBallExtension)" />
      <CoreSetupTarballs Include="$(SourceBuiltAssetsDir)dotnet-hostfxr-*$(TarBallExtension)" />
    </ItemGroup>
    <PublishCoreSetupBinaries Binaries="@(CoreSetupTarballs)"
                              DestinationFolderTemplate="$(LocalBlobStorageRoot)Runtime/{version}/" />
  </Target>

</Project>
