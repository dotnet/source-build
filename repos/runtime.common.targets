<Project>

  <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="AddRidToRuntimeJson" />
  <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="PublishCoreSetupBinaries" />

  <Target Name="SetOutputList" AfterTargets="Package" BeforeTargets="GatherBuiltPackages">
    <ItemGroup>
      <PackagesOutputList Include="$(ShippingPackagesOutput)" />
      <PackagesOutputList Include="$(NonShippingPackagesOutput)" />
    </ItemGroup>
  </Target>

  <Target Name="UpdateRuntimeGraph"
          BeforeTargets="Build"
          Condition="'$(_IsBootstrapping)' == 'true'">
    <PropertyGroup>
      <RuntimeJsonFile>$(ProjectDirectory)pkg/Microsoft.NETCore.Platforms/runtime.json</RuntimeJsonFile>
    </PropertyGroup>

    <Message Importance="High" Text="Adding rid, $(TargetRid), to $(RuntimeJsonFile)" />
    <AddRidToRuntimeJson RuntimeJson="$(RuntimeJsonFile)"
                         Rid="$(TargetRid)-$(Platform)" />
  </Target>

  <Target Name="CopyTools"
          AfterTargets="Package"
          Inputs="$(MSBuildProjectFullPath)"
          Outputs="$(RepoCompletedSemaphorePath)CopyTools.complete">
    <PropertyGroup>
      <CoreClrDestinationDir>$(ToolPackageExtractDir)coreclr-tools</CoreClrDestinationDir>
      <AssemblyExtension Condition="'$(TargetOS)' == 'Linux'">so</AssemblyExtension>
      <AssemblyExtension Condition="'$(TargetOS)' == 'FreeBSD'">so</AssemblyExtension>
      <AssemblyExtension Condition="'$(TargetOS)' == 'OSX'">dylib</AssemblyExtension>
      <AssemblyExtension Condition="'$(AssemblyExtension)' == ''">please define AssemblyExtension for $(TargetOS)</AssemblyExtension>
    </PropertyGroup>

    <ItemGroup>
      <CoreClrTools Include="$(ProjectDirectory)artifacts/bin/coreclr/$(TargetOS).$(Platform).$(Configuration)/ilasm" />
      <CoreClrTools Include="$(ProjectDirectory)artifacts/bin/coreclr/$(TargetOS).$(Platform).$(Configuration)/ildasm" />
      <CoreClrTools Include="$(ProjectDirectory)artifacts/bin/coreclr/$(TargetOS).$(Platform).$(Configuration)/libcoreclr.$(AssemblyExtension)" />
      <CoreClrTools Include="$(ProjectDirectory)artifacts/bin/coreclr/$(TargetOS).$(Platform).$(Configuration)/System.Private.CoreLib.dll" />
    </ItemGroup>

    <Message Importance="High" Text="Copying source-built ILAsm and ILDasm '@(CoreClrTools)' to '$(CoreClrDestinationDir)'" />

    <Copy SourceFiles="@(CoreClrTools)" DestinationFolder="$(CoreClrDestinationDir)" />

    <WriteLinesToFile File="$(RepoCompletedSemaphorePath)CopyTools.complete" Overwrite="true" />
  </Target>

  <!-- Need to "publish" the tarballs for cli, until cli respects the assets blob -->
  <Target Name="PublishBinaries"
          AfterTargets="Build"
          Inputs="$(MSBuildProjectFullPath)"
          Outputs="$(RepoCompletedSemaphorePath)PublishBinaries.complete">
    <ItemGroup>
      <CoreSetupTarballs Include="$(SourceBuiltAssetsDir)dotnet-runtime-*$(TarBallExtension)" />
      <CoreSetupTarballs Include="$(SourceBuiltAssetsDir)dotnet-hostfxr-*$(TarBallExtension)" />
    </ItemGroup>
    <PublishCoreSetupBinaries Binaries="@(CoreSetupTarballs)"
                              DestinationFolderTemplate="$(SourceBuiltRuntimeDir){version}/" >
      <Output TaskParameter="PublishedVersion" PropertyName="PublishedVersion" />
    </PublishCoreSetupBinaries>
    <Message Text="Published core-setup binaries version $(PublishedVersion)" Importance="High" />

    <WriteLinesToFile File="$(RepoCompletedSemaphorePath)PublishBinaries.complete" Overwrite="true" />
  </Target>

  <Target Name="CopyBinariesToBinFolder"
          AfterTargets="PublishBinaries"
          Inputs="$(MSBuildProjectFullPath)"
          Outputs="$(RepoCompletedSemaphorePath)CopyBinariesToBinFolder.complete">
    <ItemGroup>
      <_builtRuntimePackages Include="$(SourceBuiltAssetsDir)*.symbols.nupkg" />
      <_builtRuntimePackages>
        <TransformedFileName>$([System.String]::Copy('%(FileName)').Replace('symbols', 'nupkg'))</TransformedFileName>
      </_builtRuntimePackages>
      <BinariesToCopy Include="$(SourceBuiltAssetsDir)*.*" Exclude="$(SourceBuiltAssetsDir)*.nupkg;$(SourceBuiltAssetsDir)*.requires_nupkg_signing" />
      <BinariesToCopy Include="@(_builtRuntimePackages->'$(SourceBuiltPackagesPath)%(TransformedFileName)')" />
    </ItemGroup>

    <Copy SourceFiles="@(BinariesToCopy)"
          DestinationFolder="$(OutputPath)runtime"
          Condition="'@(BinariesToCopy)'!=''" />

    <WriteLinesToFile File="$(RepoCompletedSemaphorePath)CopyBinariesToBinFolder.complete" Overwrite="true" />
  </Target>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
</Project>
