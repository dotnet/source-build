<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <SourceDirectory>runtime</SourceDirectory>
    <PortableBuild>true</PortableBuild>
    <BuildingPortableRuntime>true</BuildingPortableRuntime>
    <UseSystemLibraries>false</UseSystemLibraries>
  </PropertyGroup>

  <Import Project="runtime.common.props"/>

  <!-- Repository References -->
  <ItemGroup>
      <RepositoryReference Include="arcade" />
      <RepositoryReference Include="linker" />
      <RepositoryReference Include="newtonsoft-json" />
      <RepositoryReference Include="newtonsoft-json901" />
      <RepositoryReference Include="roslyn" />
      <RepositoryReference Include="standard" />
  </ItemGroup>

  <!-- Additional Targets -->
  <Target Name="CopyTools"
          AfterTargets="Package">
    <PropertyGroup>
      <CoreClrDestinationDir>$(ToolPackageExtractDir)coreclr-tools</CoreClrDestinationDir>
      <AssemblyExtension Condition="'$(TargetOS)' == 'Linux'">so</AssemblyExtension>
      <AssemblyExtension Condition="'$(TargetOS)' == 'FreeBSD'">so</AssemblyExtension>
      <AssemblyExtension Condition="'$(TargetOS)' == 'OSX'">dylib</AssemblyExtension>
      <AssemblyExtension Condition="'$(AssemblyExtension)' == ''">please define AssemblyExtension for $(TargetOS)</AssemblyExtension>
    </PropertyGroup>

    <ItemGroup>
      <CoreClrTools Include="$(ProjectDirectory)artifacts/bin/coreclr/$(TargetOS).$(Platform).$(Configuration)/ilasm" />
      <CoreClrTools Include="$(ProjectDirectory)artifacts/bin/coreclr/$(TargetOS).$(Platform).$(Configuration)/ildasm" />
      <CoreClrTools Include="$(ProjectDirectory)artifacts/bin/coreclr/$(TargetOS).$(Platform).$(Configuration)/libcoreclr.$(AssemblyExtension)" />
      <CoreClrTools Include="$(ProjectDirectory)artifacts/bin/coreclr/$(TargetOS).$(Platform).$(Configuration)/System.Private.CoreLib.dll" />
    </ItemGroup>

    <Message Importance="High" Text="Copying source-built ILAsm and ILDasm '@(CoreClrTools)' to '$(CoreClrDestinationDir)'" />

    <Copy SourceFiles="@(CoreClrTools)" DestinationFolder="$(CoreClrDestinationDir)" />
  </Target>

  <Target Name="CleanupRepoForNonPortableBuild" AfterTargets="RemoveBuiltPackagesFromCache">
    <!-- Make a copy of the portable build logs -->
    <PropertyGroup>
      <PortableLogDir>$(ProjectDirectory)artifacts/portableLog</PortableLogDir>
    </PropertyGroup>
    <ItemGroup>
      <FilesToCopy Include="$(ProjectDirectory)artifacts/log/**/*" />
    </ItemGroup>
    <MakeDir Directories="$(PortableLogDir)" Condition="Exists('$(ProjectDirectory)artifacts')" />
    <Copy SourceFiles="@(FilesToCopy)" DestinationFolder="$(PortableLogDir)/%(RecursiveDir)" Condition="Exists('$(PortableLogDir)')" />

    <!-- Cleanup everything else -->
    <ItemGroup>
      <DirsToDelete Include="$([System.IO.Directory]::GetDirectories(&quot;$(ProjectDirectory)artifacts/&quot;))" Condition="Exists('$(ProjectDirectory)artifacts')" />
      <DirsToDelete Include="$(ProjectDirectory)bin" Condition="Exists('$(ProjectDirectory)bin')" />
      <DirsToDelete Remove="$(PortableLogDir)" />
    </ItemGroup>

    <RemoveDir Directories="@(DirsToDelete)" />
  </Target>

  <Import Project="runtime.common.targets" />

  <Target Name="GatherBuiltPackages" BeforeTargets="CopyPackage">
    <ItemGroup>
      <_BuiltPackages Include="$(ShippingPackagesOutput)/*linux*nupkg" Exclude="$(ShippingPackagesOutput)/*.symbols.nupkg" />
      <_BuiltPackages Include="$(NonShippingPackagesOutput)/*linux*nupkg" Exclude="$(NonShippingPackagesOutput)/*.symbols.nupkg" />
    </ItemGroup>
  </Target>
</Project>
