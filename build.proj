<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" InitialTargets="PrepareEnvironment" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(TaskDirectory)Microsoft.DotNet.SourceBuild.Tasks/bin/Debug/netstandard1.4/Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="GetHostInformation" />
  <UsingTask AssemblyFile="$(TaskDirectory)Microsoft.DotNet.SourceBuild.Tasks/bin/Debug/netstandard1.4/Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="Select" />

  <Import Project="dir.props" />
  <Import Project="targets/targets.metadata" />
  
  <Target Name="PrepareEnvironment">
    <GetHostInformation Condition="'$(TargetRid)' == ''">
      <Output PropertyName="TargetRid" TaskParameter="Rid" />
    </GetHostInformation>

    <GetHostInformation Condition="'$(TargetOS)' == ''">
      <Output PropertyName="TargetOS" TaskParameter="OSName" />
    </GetHostInformation>

    <Message Text="Build Environment: $(Platform) $(Configuration) $(TargetOS) $(TargetRid)" />
  </Target>

  <Target Name="_SelectRepositories">
    <Select Collection="@(Repository)" Selection="$(Only)">
    	<Output ItemName="SelectedRepositories" TaskParameter="Selected" />
    </Select>
  </Target>

  <!-- Set the "only" property to select repositories -->
  <Target Name="CallOnlyBuildTarget" DependsOnTargets="PrepareOutput;_SelectRepositories">
    <Error Condition="'$(Only)' == ''" Text="Property ONLY is required; e.g. /p:ONLY=coreclr;corefx " />

    <!-- Note, this does not get parallelized by MSBuild -->
    <CallTarget Targets="%(SelectedRepositories.BuildTarget)" RunEachTargetSeparately="true" /> 
  </Target>

  <Target Name="_ScheduleSelectedBuilds">
    <ItemGroup>
      <ScheduledBuilds Include="%(SelectedRepositories.BuildProject)" KeepDuplicates="true" KeepMetadata="true">
        <AdditionalProperties>Only=%(SelectedRepositories.Identity)</AdditionalProperties>
      </ScheduledBuilds>
    </ItemGroup>
  </Target>

  <!-- This is where we schedule the repositories to be built in parallel. -->
  <Target Name="Build" DependsOnTargets="PrepareOutput;_SelectRepositories;_ScheduleSelectedBuilds">
    <Message Importance="Normal" Condition="'%(SelectedRepositories.BuildTarget)' != ''" Text="Invoking the following targets: %(SelectedRepositories.BuildTarget)" />

    <Message Importance="High" Text="Scheduled @(ScheduledBuilds)" />
    <MSBuild  
        Projects="@(ScheduledBuilds)"  
        Targets="CallOnlyBuildTarget"
        BuildInParallel="true">

        <Output  
            TaskParameter="TargetOutputs"  
            ItemName="AssembliesBuiltByChildProjects" />  
    </MSBuild>  

    <Message Importance="High" Text="@(AssembliesBuiltByChildProjects)"/>

    <CallTarget Targets="BuildCoreSetup"  />

    <Message Importance="Normal" Text="Build Complete" />
  </Target>

  <Target Name="Clean" DependsOnTargets="CleanOutput;_SelectRepositories">
    <Message Importance="Normal" Text="Invoking the following targets: %(SelectedRepositories.CleanTarget)" />

    <CallTarget Targets="%(SelectedRepositories.CleanTarget)" RunEachTargetSeparately="true" />

    <Message Importance="Normal" Text="Clean Complete" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

  <Target Name="PrepareOutput">
    <MakeDir Directories="$(OutputPath)" />
    <MakeDir Directories="$(IntermediatePath)" />
    <MakeDir Directories="$(SourceBuiltPackagesPath)" />
  </Target>

  <Target Name="CleanOutput">
    <RemoveDir Directories="$(OutputPath)" />
    <RemoveDir Directories="$(IntermediatePath)" />
  </Target>

</Project>
