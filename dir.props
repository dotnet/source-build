<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition="$(Configuration) == ''">Release</Configuration>
    <Platform Condition="'$(Platform)' == ''">x64</Platform>

    <!-- true if we have bootstrapped buildtools (usually on an unsupported platform -->
    <_IsBootstrapping Condition="'$(BootstrapBuildToolsDir)' != ''">true</_IsBootstrapping>

    <PortableBuild Condition="'$(OS)' == 'Windows_NT'">true</PortableBuild>
    <PortableBuild Condition="'$(PortableBuild)' == ''">false</PortableBuild>
    <UseSystemLibraries Condition="'$(UseSystemLibraries)' == '' AND '$(PortableBuild)' != 'true'">true</UseSystemLibraries>
  </PropertyGroup>

  <PropertyGroup>
    <ProjectDir>$(MSBuildThisFileDirectory)</ProjectDir>
    <TargetsDir>$(ProjectDir)targets/</TargetsDir>
    <KeysDir>$(ProjectDir)keys/</KeysDir>
    <DotNetCliToolDir>$(ProjectDir)Tools/dotnetcli/</DotNetCliToolDir>
    <PatchesDir>$(ProjectDir)patches/</PatchesDir>
    <PackagesDir>$(ProjectDir)packages/</PackagesDir>
    <DotNetSdkDir>$(DotNetCliToolDir)sdk/$(SDK_VERSION)/</DotNetSdkDir>
    <DotNetSdkResolversDir>$(DotNetSdkDir)SdkResolvers/</DotNetSdkResolversDir>
  </PropertyGroup>

  <PropertyGroup>
    <BuildInParallel Condition="'$(BuildInParallel)'==''">false</BuildInParallel>
  </PropertyGroup>

  <PropertyGroup>
    <ShellExtension Condition="'$(OS)' == 'Windows_NT'">.cmd</ShellExtension>
    <ShellExtension Condition="'$(OS)' != 'Windows_NT'">.sh</ShellExtension>
    <TarBallExtension Condition="'$(OS)' == 'Windows_NT'">.zip</TarBallExtension>
    <TarBallExtension Condition="'$(OS)' != 'Windows_NT'">.tar.gz</TarBallExtension>
  </PropertyGroup>

  <PropertyGroup>
    <SubmoduleDirectory Condition="'$(SubmoduleDirectory)' == ''">$(ProjectDir)src/</SubmoduleDirectory>
    <GitModulesPath>$(ProjectDir).gitmodules</GitModulesPath>
  </PropertyGroup>

  <PropertyGroup>
    <BaseOutputPath>$(ProjectDir)bin/</BaseOutputPath>
    <ToolsDir>$(ProjectDir)Tools/</ToolsDir>
    <ToolPackageExtractDir>$(ToolsDir)source-built/</ToolPackageExtractDir>
    <TaskDirectory>$(ProjectDir)tools-local/tasks/</TaskDirectory>
    <TasksBinDir>$(TaskDirectory)Microsoft.DotNet.SourceBuild.Tasks/bin/Debug/netstandard1.5/</TasksBinDir>
    <BaseIntermediatePath>$(BaseOutputPath)obj/</BaseIntermediatePath>
    <OutputPath>$(BaseOutputPath)$(Platform)/$(Configuration)/</OutputPath>
    <IntermediatePath>$(BaseIntermediatePath)$(Platform)/$(Configuration)/</IntermediatePath>
    <LocalBlobStorageRoot>$(IntermediatePath)blobs/</LocalBlobStorageRoot>
    <LocalBuildInfoRoot>$(IntermediatePath)build-info/</LocalBuildInfoRoot>
    <LocalNuGetPackagesRoot>$(IntermediatePath)nuget-packages/</LocalNuGetPackagesRoot>
    <SourceBuiltBlobFeedDir>$(IntermediatePath)blob-feed/</SourceBuiltBlobFeedDir>
    <SourceBuiltPackagesPath>$(SourceBuiltBlobFeedDir)packages/</SourceBuiltPackagesPath>
    <SourceBuiltAssetsDir>$(SourceBuiltBlobFeedDir)assets/</SourceBuiltAssetsDir>
    <PrebuiltPackagesPath>$(ProjectDir)prebuilt/nuget-packages/</PrebuiltPackagesPath>
    <SourceBuiltTarBallPath>$(OutputPath)</SourceBuiltTarBallPath>
    <TargetInfoProps>$(IntermediatePath)TargetInfo.props</TargetInfoProps>
    <RestoreSourcePropsPath>$(IntermediatePath)RestoreSources.props</RestoreSourcePropsPath>
    <PackageVersionPropsPath>$(IntermediatePath)PackageVersions.props</PackageVersionPropsPath>
    <LoggingDir>$(BaseOutputPath)logs/</LoggingDir>
    <!-- Dir where git info is generated during online builds. -->
    <GitInfoOutputDir>$(BaseOutputPath)git-info/</GitInfoOutputDir>
    <!-- Dir where git info is placed inside the tarball. -->
    <GitInfoOfflineDir>$(ProjectDir)git-info/</GitInfoOfflineDir>
  </PropertyGroup>

  <!-- Import Build tools common props file where repo-independent properties are found -->
  <Import Project="$(ToolsDir)Build.Common.props" Condition="Exists('$(ToolsDir)Build.Common.props')" />

  <PropertyGroup>
     <ArmEnvironmentVariables Condition="'$(ArmEnvironmentVariables)' == ''">ROOTFS_DIR=$(BaseIntermediatePath)crossrootfs/arm</ArmEnvironmentVariables>
     <ArmEnvironmentVariables Condition="'$(Platform)' == 'armel'">ROOTFS_DIR=$(BaseIntermediatePath)crossrootfs/armel</ArmEnvironmentVariables>
   </PropertyGroup>

  <Import Project="$(TargetInfoProps)" Condition="$(GeneratingStaticPropertiesFile) != 'true' AND Exists('$(TargetInfoProps)')" />

  <PropertyGroup>
    <!-- Always build portable runtime on OSX to match the CLI repo's filename expectations. https://github.com/dotnet/source-build/issues/438 -->
    <PortableBuild Condition="'$(TargetOS)' == 'OSX'">true</PortableBuild>
  </PropertyGroup>

  <Import Project="$(ProjectDir)dependencies.props" />

  <PropertyGroup>
    <!--
        Temporarily update RootRepo to known-good
        repo project until all repos are building clean.
        When all repos build, this can be changed back
        to cli.
    <RootRepo>cli</RootRepo>
    -->
    <RootRepo>known-good</RootRepo>
    <RootRepo Condition="$(Platform.Contains('arm'))">core-setup</RootRepo>
  </PropertyGroup>

  <ItemGroup>
    <SourceBuiltPackage Include="$(SourceBuiltPackagesPath)/*.nupkg" />
  </ItemGroup>
</Project>
