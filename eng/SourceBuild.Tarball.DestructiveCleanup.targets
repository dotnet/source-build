<Project>

  <!--
    Below are some destructive cleanup steps that we optionally perform during tarball creation.
    These are used in CI to avoid filling up disk space, when we have weak build agents. These steps
    are not generally suitable for dev scenarios because they delete intermediate data that might
    have taken quite a while to download or create.
  -->

  <!--
    We need to keep artifacts/src/<repo>/.git around for sourcelink metadata but we can delete just
    about everything else, Darc will pull it from the copy in .git/modules. This list of extensions
    is everything over 6MB or so.
  -->
  <Target Name="DestructiveIntermediateCleanLargeFilesFromClonedSource"
          BeforeTargets="AddTarballSource">
    <ItemGroup>
      <LargeSrcFileExtension Include="
        .dll;
        .exe;
        .pdb;
        .mdb;
        .zip;
        .so;
        .o;
        .a;
        .tar.gz;
        .vb;
        .il;
        .xlf;
        .cpp;
        .txt;
        .map;
        .md;
        .fs;
        .h;
        .c;
        .js;
        .json;
        .ildump;
        .resx;
        .xml;
        .css;
        .nupkg" />

      <LargeSrcFiles Include="$(ClonedSubmoduleDirectory)*%(LargeSrcFileExtension.Identity)" />
    </ItemGroup>

    <Message Importance="High" Text="Removing large and unnecessary source files from $(ClonedSubmoduleDirectory)" />

    <Delete Files="@(LargeSrcFiles)" />
  </Target>

  <Target Name="DestructiveIntermediateCleanTarballSource"
          AfterTargets="AddTarballSource">
    <ItemGroup>
      <!-- Now we don't need .git/modules/src anymore. -->
      <LocalGitDirToRemove Include="$(ClonedSubmoduleGitRootDirectory)" />

      <!-- Delete the master copies - we only need the specific hashes. -->
      <LocalGitDirToRemove
        Include="$(TarballSourceDir)*"
        Exclude="
          $(TarballSourceDir)reference-assemblies;
          $(TarballSourceDir)netcorecli-fsc"
        Condition="
          $([System.IO.Directory]::Exists('%(Identity)')) and
          !$([System.Text.RegularExpressions.Regex]::IsMatch(
            '%(Identity)',
            '\.[A-Fa-f0-9]{40}'))" />
    </ItemGroup>

    <RemoveDir Directories="@(LocalGitDirToRemove)" />

    <ItemGroup>
      <TarballCoreClrTestsDir Include="$(TarballSourceDir)coreclr.*/tests" />
    </ItemGroup>

    <RemoveDir Directories="@(TarballCoreClrTestsDir)" />
  </Target>

</Project>
