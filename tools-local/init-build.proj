<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- Don't try to import the target info file when building this project -->
    <GeneratingStaticPropertiesFile>true</GeneratingStaticPropertiesFile>
  </PropertyGroup>
  <Import Project="..\dir.props" />

  <UsingTask AssemblyFile="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll" TaskName="GetHostInformation" />

  <PropertyGroup>
    <BuildCompetedSuccessSemaphore>$(BaseIntermediatePath)/init-build-proj.complete</BuildCompetedSuccessSemaphore>
    <SourceBuildMSBuildSdkResolverPath>$(DotNetSdkResolversDir)SourceBuild.MSBuildSdkResolver\SourceBuild.MSBuildSdkResolver.dll</SourceBuildMSBuildSdkResolverPath>
  </PropertyGroup>

  <Target Name="Build"
    Inputs="$(TargetInfoProps)"
    Outputs="$(BuildCompetedSuccessSemaphore)"
    >
    <CallTarget Targets="BuildTasks;InstallSourceBuildSdkResolver;WriteDynamicPropsToStaticPropsFiles;GenerateRootFs;CreateAllGitInfoProps;ApplyPatches" />
    <Touch Files="$(BuildCompetedSuccessSemaphore)" AlwaysCreate="true" />
  </Target>

  <Target Name="Clean">
    <Delete Files="$(BuildCompetedSuccessSemaphore)" />
  </Target>

  <Target Name="InstallSourceBuildSdkResolver">
    <Copy SourceFiles="$(TasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.dll"
          DestinationFiles="$(SourceBuildMSBuildSdkResolverPath)" />
  </Target>

  <Target Name="BuildTasks">
    <PropertyGroup Condition="'$(OfflineBuild)' == 'true'">
      <OfflineSources>$(PrebuiltPackagesPath)</OfflineSources>
    </PropertyGroup>
    <Exec Command="$(DotNetCliToolDir)dotnet build tasks\Microsoft.DotNet.SourceBuild.Tasks\Microsoft.DotNet.SourceBuild.Tasks.csproj /p:RestoreSources=$(OfflineSources)" />
  </Target>

  <Target Name="GetRepoProjects">
    <ItemGroup>
      <RepoProjects Include="$(ProjectDir)repos/*.proj" />
    </ItemGroup>
  </Target>

  <Target Name="CreateAllGitInfoProps">
    <!--
      Create the files in a new process to avoid MSBuild remembering the static properties/items.
      Using the MSBuild task here would cause, for example, GIT_COMMIT EnvironmentVariables items to
      be created that don't contain any commit, and they would stick around until the real build.
    -->
    <Exec Command="$(DotNetCliToolDir)dotnet msbuild /v:Quiet /nologo $(MSBuildThisFileFullPath) /t:CreateGitInfoProps" />
  </Target>

  <Target Name="CreateGitInfoProps" DependsOnTargets="GetRepoProjects">
    <MSBuild Projects="@(RepoProjects)" Targets="CreateGitInfoProps" BuildInParallel="$(BuildInParallel)" />
  </Target>

  <Target Name="ApplyPatches" DependsOnTargets="GetRepoProjects">
    <Message Text="Applying patches only" />
    <MSBuild Projects="@(RepoProjects)" Targets="ApplyPatches" BuildInParallel="$(BuildInParallel)" />
  </Target>

  <Target Name="GenerateRootFs" Condition="'$(OS)' != 'Windows_NT'">
     <Exec Condition="$(Platform.Contains('arm')) AND '$(Platform)' != 'armel'" Command="$(ArmEnvironmentVariables) $(ProjectDir)cross/build-rootfs.sh" />
     <Exec Condition="'$(Platform)' == 'armel'" Command="$(ArmEnvironmentVariables) $(ProjectDir)cross/armel/tizen-build-rootfs.sh" />
  </Target>

  <Target Name="WriteDynamicPropsToStaticPropsFiles">
    <GetHostInformation Condition="'$(TargetRid)' == ''">
      <Output PropertyName="TargetRid" TaskParameter="Rid" />
    </GetHostInformation>

    <GetHostInformation Condition="'$(TargetOS)' == ''">
      <Output PropertyName="TargetOS" TaskParameter="OSName" />
    </GetHostInformation>

    <PropertyGroup>
      <TargetInfoPropsContent>&lt;Project ToolsVersion=&quot;15.0&quot;&gt;
  &lt;PropertyGroup&gt;
    &lt;TargetRid&gt;$(TargetRid)&lt;/TargetRid&gt;
    &lt;TargetOS&gt;$(TargetOS)&lt;/TargetOS&gt;
  &lt;/PropertyGroup&gt;
&lt;/Project&gt;</TargetInfoPropsContent>
    </PropertyGroup>
    <MakeDir Directories="$(IntermediatePath)" Condition="!Exists('$(IntermediatePath)')" />
    <WriteLinesToFile File="$(TargetInfoProps)" Lines="$(TargetInfoPropsContent)" Overwrite="True" />
  </Target>

</Project>
