<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    Contains targets to do NuGet packages. The following tasks need to be performed:
        Parameters:
          NuGetConfigDir         - this directory may contain the following files:
                                   NuGet.Config - configuration file
                                   project.json - new way to install packages
          NuGetDir               - location to install packages
          SolutionRoot           - Process all project.json files under this directory. Excludes project.json in NuGetConfigDir.
          InstallationDependency - list of files that, when changed, need to cause reinstall
          BuildToolsSemaphore    - Created when build tools are restored
        1. Downloads NuGet.exe
  -->

  <!-- These properties are related to NuGet -->
  <PropertyGroup>
    <NuGetToolPath Condition="'$(NuGetToolPath)'==''">$([System.IO.Path]::Combine($(NuGetDir), "NuGet.exe"))</NuGetToolPath>
    <NuGetProjectJsonFile>$([System.IO.Path]::Combine($(NuGetConfigDir),"project.json"))</NuGetProjectJsonFile>
    <NugetVersion>v3.3.0</NugetVersion>
    <NugetDownloadURL>https://dist.nuget.org/win-x86-commandline/$(NugetVersion)/nuget.exe</NugetDownloadURL>
    <NugetExeSemaphore>$(NuGetDir)NuGet.$(NugetVersion).semaphore</NugetExeSemaphore>
    <DownloadCommand Condition="'$(OsEnvironment)'=='Windows_NT'">powershell -noprofile -nologo -command "(new-object System.Net.WebClient).DownloadFile('$(NugetDownloadURL)', '$(NuGetToolPath)')"</DownloadCommand>
    <DownloadCommand Condition="'$(OsEnvironment)'!='Windows_NT'">curl -sSL --create-dirs -o &quot;$(NuGetToolPath)&quot; $(NugetDownloadURL)</DownloadCommand>
    <BuildToolsSemaphore>$(NuGetDir)BuildTools.semaphore</BuildToolsSemaphore>
  </PropertyGroup>

  <PropertyGroup>
    <RestoreBuildToolsPackagesConfigInputs>$(GlobalPropertiesFile);$(NuGetProjectJsonFile)</RestoreBuildToolsPackagesConfigInputs>
  </PropertyGroup>

  <!-- Restore NuGet.exe and use it to process Nuget.config. -->
  <Target Name="_RestoreBuildToolsPackagesConfig"
          Inputs="$(RestoreBuildToolsPackagesConfigInputs)"
          Outputs="$(BuildToolsSemaphore);$(NugetExeSemaphore);$(NuGetToolPath)"
          Condition="Exists('$(NuGetProjectJsonFile)') AND '$(SkipRestoreBuildToolsPackagesConfig)'!='true'">
    <Message Importance="High" Text="Restoring build tools..." />

    <!-- Restore tools from packages/project.json -->
    <Exec Condition="Exists('$(NuGetProjectJsonFile)')" 
          Command="$(DnuCoreRestoreCommand) --packages $(ToolPackagesDir) &quot;$(NuGetProjectJsonFile)&quot;"/>

    <!-- <Exec Condition="Exists('$(NuGetProjectJsonFile)')" 
          Command="$(DotnetToolCommand) publish -f dnxcore50 -r $(NuGetRuntimeIdentifier) -o $(ToolPackagesDir) &quot;$(NuGetProjectJsonFile)&quot;"
          WorkingDirectory="$(NuGetConfigDir)" /> -->

    <Error Condition="'$(ErrorIfBuildToolsRestoredFromIndividualProject)'=='true'"
           Text="The build tools package was just restored and so we cannot continue the build of an individual project because targets from the build tools package were not able to be imported. Please retry the build the individual project again." />

    <!--
      Touch our semaphore file to ensure Inputs/Outputs comparison for this target will show that we're up to date.
      Ignore failures in the unlikely, but possible, event that we hit this from two projects simultaneously.
    -->
    <Touch Files="$(BuildToolsSemaphore)"
           ContinueOnError="WarnAndContinue"
           AlwaysCreate="true"
           ForceTouch="true" />

  </Target>

  <!-- Make all files readable and everything, except *.dll, *.xml, and *.nupkg, executable -->
  <Target Name="_UpdateExecPermissions"
          AfterTargets="_RestoreBuildToolsPackagesConfig"
          Condition="'$(OsEnvironment)'!='Windows_NT'">

    <Exec Command="find &quot;$(DnuToolPath)&quot; -type f -a -name &quot;*&quot; -a \! -iname &quot;*.dll&quot; -a \! -iname &quot;*.xml&quot; -a \! -iname &quot;*.nupkg&quot; -a \! -iname &quot;*.so&quot; -print0 | xargs -0 -I {} chmod a+xr {}" />

  </Target>
</Project>
